[
  (let_in_expr
    (value_declaration
      (function_declaration_left
        (lower_case_identifier) @name
      )
    )
  ) @scope
  (value_declaration
    (function_declaration_left
      (lower_pattern
        (lower_case_identifier) @name
      )
    )
  ) @scope
]

=== test input below ===

module Main exposing (..)


isYoung : Int -> Int -> Bool
isYoung birthYear_ currentYear =
    let
        age =
            currentYear - birthYear_
    in
    age < 30


birthYear : Int -> Int -> Int
birthYear age currentYear =
    currentYear - age
-- === expected output below ===
-- scope: [6:0] isYoung birthYear_ currentYear =
--     let
--         age =
--             currentYear - birthYear_
--     in
--     age < 30
-- name: [6:8] birthYear_
--
-- scope: [6:0] isYoung birthYear_ currentYear =
--     let
--         age =
--             currentYear - birthYear_
--     in
--     age < 30
-- name: [6:19] currentYear
--
-- scope: [7:4] let
--         age =
--             currentYear - birthYear_
--     in
--     age < 30
-- name: [8:8] age
--
-- scope: [15:0] birthYear age currentYear =
--     currentYear - age
-- name: [15:10] age
--
-- scope: [15:0] birthYear age currentYear =
--     currentYear - age
-- name: [15:14] currentYear
--
