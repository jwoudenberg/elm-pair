[
    (module_declaration
        exposing: (exposing_list
            [
                (double_dot)       @exposed_all
                (exposed_value)    @exposed_value
                (exposed_type)     @exposed_type
                (exposed_operator) @exposed_value
            ]
        )
    )
    (value_declaration
        (function_declaration_left
            .
            (lower_case_identifier) @value
        )
    )
    (type_alias_declaration
        name: (type_identifier) @type_
    )
    (type_declaration
        name: (type_identifier) @type_
        (union_variant
            name: (constructor_identifier) @constructor
        )
        (
            "|"
            (union_variant
                name: (constructor_identifier) @constructor
            )
        )*
    )
]

=== test input below ===

module Main exposing (..)

import Json.Decode exposing (Decoder, int)


sumDecoder : Decoder Int
sumDecoder =
    Json.Decode.map2 (+)
        (Json.Decode.field "x" int)
        (Json.Decode.field "y" int)

-- === expected output below ===
-- exposed_all: {Node double_dot (2, 22) - (2, 24)}
-- 
-- value: {Node lower_case_identifier (8, 0) - (8, 10)}
-- 
