[
    (value_qid
        .
        (lower_case_identifier) @value
    )
    (type_annotation
        (lower_case_identifier) @value_definition
    )
    (function_declaration_left
        (lower_case_identifier) @value_definition
    )
    (lower_pattern
        (lower_case_identifier) @value_definition
    )
    (module_declaration
      exposing: (exposing_list
        [
          (exposed_value
              (lower_case_identifier) @value_definition
          )
          (exposed_type
              (type_identifier) @type_
          )
        ]
      )
    )
    (type_alias_declaration
        (type_identifier) @type_
    )
    (type_declaration
        (type_identifier) @type_
    )
    (type_qid
        .
        (type_identifier) @type_
    )
    (union_variant
        (constructor_identifier) @constructor
    )
    (constructor_qid
        .
        (constructor_identifier) @constructor
    )
]

=== test input below ===

module Main exposing (Beverage, decoder)

import Json.Decode exposing (Decoder, float, succeed)


type alias Beverage =
    { kind: BeverageKind
    , liters: Float
    }


type BeverageKind
    = HotChocolate
    | Water


enjoyment : Beverage -> Float
enjoyment =
    \beverage ->
        case beverage.kind of
            HotChocolate -> liters * 1000
            Water -> 100


decoder : BeverageKind -> Decoder Beverage
decoder kind =
    let
        kindDecoder = succeed kind
    in
    Json.Decode.map2 Beverage
        (Json.Decode.field "kind" kindDecoder)
        (Json.Decode.field "liters" float)

=== expected output below ===
type_: [2:22] Beverage

value_definition: [2:32] decoder

type_: [7:11] Beverage

type_: [8:12] BeverageKind

type_: [9:14] Float

type_: [13:5] BeverageKind

constructor: [14:6] HotChocolate

constructor: [15:6] Water

value_definition: [18:0] enjoyment

type_: [18:12] Beverage

type_: [18:24] Float

value_definition: [19:0] enjoyment

value_definition: [20:5] beverage

value: [21:13] beverage

constructor: [22:12] HotChocolate

value: [22:28] liters

constructor: [23:12] Water

value_definition: [26:0] decoder

type_: [26:10] BeverageKind

type_: [26:26] Decoder

type_: [26:34] Beverage

value_definition: [27:0] decoder

value_definition: [27:8] kind

value_definition: [29:8] kindDecoder

value: [29:22] succeed

value: [29:30] kind

constructor: [31:21] Beverage

value: [32:34] kindDecoder

value: [33:36] float

