(import_clause
    moduleName: (module_identifier) @name
    asClause:
    (as_clause
        name: (module_name_segment) @as_clause
    )?
    exposing: (exposing_list)? @exposing_list
) @root

=== test input below ===

module Main exposing (..)

import Json.Decode exposing (Decoder, int)


sumDecoder : Decoder Int
sumDecoder =
    Json.Decode.map2 (+)
        (Json.Decode.field "x" int)
        (Json.Decode.field "y" int)

-- === expected output below ===
-- root: {Node import_clause (4, 0) - (4, 42)}
-- name: {Node module_identifier (4, 7) - (4, 18)}
-- exposing_list: {Node exposing_list (4, 19) - (4, 42)}
-- 
