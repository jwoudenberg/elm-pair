(_
    (
        (module_name_segment) @qualifier
        (dot)
    )+
    [
        (lower_case_identifier)  @value
        (type_identifier)        @type_
        (constructor_identifier) @constructor
    ]
) @root

=== test input below ===

module Main exposing (..)

import Json.Decode exposing (Decoder, int)


sumDecoder : Decoder Int
sumDecoder =
    Json.Decode.map2 (+)
        (Json.Decode.field "x" int)
        (Json.Decode.field "y" int)

-- === expected output below ===
-- root: {Node value_qid (9, 4) - (9, 20)}
-- qualifier: {Node module_name_segment (9, 4) - (9, 8)}
-- qualifier: {Node module_name_segment (9, 9) - (9, 15)}
-- value: {Node lower_case_identifier (9, 16) - (9, 20)}
--
-- root: {Node value_qid (10, 9) - (10, 26)}
-- qualifier: {Node module_name_segment (10, 9) - (10, 13)}
-- qualifier: {Node module_name_segment (10, 14) - (10, 20)}
-- value: {Node lower_case_identifier (10, 21) - (10, 26)}
--
-- root: {Node value_qid (11, 9) - (11, 26)}
-- qualifier: {Node module_name_segment (11, 9) - (11, 13)}
-- qualifier: {Node module_name_segment (11, 14) - (11, 20)}
-- value: {Node lower_case_identifier (11, 21) - (11, 26)}
--
